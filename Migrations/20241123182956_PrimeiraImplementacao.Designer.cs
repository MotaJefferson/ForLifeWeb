// <auto-generated />
using System;
using ForLifeWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForLifeWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241123182956_PrimeiraImplementacao")]
    partial class PrimeiraImplementacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForLifeWeb.Models.Cliente", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cliente"));

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id_cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ForLifeWeb.Models.Fornecedor", b =>
                {
                    b.Property<int>("id_fornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_fornecedor"));

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("razao_social")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id_fornecedor");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("ForLifeWeb.Models.Insumo", b =>
                {
                    b.Property<int>("id_insumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_insumo"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("periodo_vencimento")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_insumo");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("ForLifeWeb.Models.InsumoCompra", b =>
                {
                    b.Property<int>("id_compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_compra"));

                    b.Property<int>("fornecedor_id")
                        .HasColumnType("int");

                    b.Property<int>("insumo_id")
                        .HasColumnType("int");

                    b.Property<decimal>("preco_unitario")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("valor_compra")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("id_compra");

                    b.HasIndex("fornecedor_id");

                    b.HasIndex("insumo_id");

                    b.ToTable("InsumoCompra");
                });

            modelBuilder.Entity("ForLifeWeb.Models.InsumoEstoque", b =>
                {
                    b.Property<int>("id_estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_estoque"));

                    b.Property<DateTime>("data_baixa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_entrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_registro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_vencimento_estimado")
                        .HasColumnType("datetime2");

                    b.Property<int>("fornecedor_id")
                        .HasColumnType("int");

                    b.Property<int>("insumo_id")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_atual")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_entrada")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_saida")
                        .HasColumnType("int");

                    b.HasKey("id_estoque");

                    b.HasIndex("fornecedor_id");

                    b.HasIndex("insumo_id");

                    b.ToTable("InsumoEstoque");
                });

            modelBuilder.Entity("ForLifeWeb.Models.Plantio", b =>
                {
                    b.Property<int>("id_plantio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_plantio"));

                    b.Property<DateTime?>("data_baixa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_colheita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_plantio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_registro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_vencimento_estimado")
                        .HasColumnType("datetime2");

                    b.Property<int>("insumo_id")
                        .HasColumnType("int");

                    b.Property<int>("produto_id")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_plantio")
                        .HasColumnType("int");

                    b.HasKey("id_plantio");

                    b.HasIndex("insumo_id");

                    b.HasIndex("produto_id");

                    b.ToTable("Plantio");
                });

            modelBuilder.Entity("ForLifeWeb.Models.Produto", b =>
                {
                    b.Property<int>("id_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_produto"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("insumo_id")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("periodo_colheita")
                        .HasColumnType("int");

                    b.Property<int>("periodo_limite_colheita")
                        .HasColumnType("int");

                    b.Property<int>("periodo_vencimento")
                        .HasColumnType("int");

                    b.HasKey("id_produto");

                    b.HasIndex("insumo_id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ForLifeWeb.Models.ProdutoEstoque", b =>
                {
                    b.Property<int>("id_estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_estoque"));

                    b.Property<DateTime>("data_baixa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_colheita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_registro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_saida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_vencimento_estimado")
                        .HasColumnType("datetime2");

                    b.Property<int>("produto_id")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_atual")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_colheita")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_saida")
                        .HasColumnType("int");

                    b.HasKey("id_estoque");

                    b.HasIndex("produto_id");

                    b.ToTable("ProdutoEstoque");
                });

            modelBuilder.Entity("ForLifeWeb.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("cod_usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("data_cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ForLifeWeb.Models.Venda", b =>
                {
                    b.Property<int>("id_venda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_venda"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_registro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("data_venda")
                        .HasColumnType("datetime2");

                    b.Property<string>("numero_venda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("preco_unitario")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("produto_id")
                        .HasColumnType("int");

                    b.Property<int>("quantidade_venda")
                        .HasColumnType("int");

                    b.Property<decimal>("valor_venda")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("id_venda");

                    b.HasIndex("cliente_id");

                    b.HasIndex("produto_id");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("ForLifeWeb.Models.InsumoCompra", b =>
                {
                    b.HasOne("ForLifeWeb.Models.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("fornecedor_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ForLifeWeb.Models.Insumo", null)
                        .WithMany()
                        .HasForeignKey("insumo_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ForLifeWeb.Models.InsumoEstoque", b =>
                {
                    b.HasOne("ForLifeWeb.Models.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("fornecedor_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ForLifeWeb.Models.Insumo", null)
                        .WithMany()
                        .HasForeignKey("insumo_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ForLifeWeb.Models.Plantio", b =>
                {
                    b.HasOne("ForLifeWeb.Models.Insumo", null)
                        .WithMany()
                        .HasForeignKey("insumo_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ForLifeWeb.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("produto_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ForLifeWeb.Models.Produto", b =>
                {
                    b.HasOne("ForLifeWeb.Models.Insumo", null)
                        .WithMany()
                        .HasForeignKey("insumo_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ForLifeWeb.Models.ProdutoEstoque", b =>
                {
                    b.HasOne("ForLifeWeb.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("produto_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ForLifeWeb.Models.Venda", b =>
                {
                    b.HasOne("ForLifeWeb.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("cliente_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ForLifeWeb.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("produto_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
